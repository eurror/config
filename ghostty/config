font-family = "JetBrainsMono Nerd Font"
font-family-bold = "JetBrainsMono Nerd Font"
font-family-italic = "JetBrainsMono Nerd Font"
font-family-bold-italic = "JetBrainsMono Nerd Font"

font-style = default
font-style-bold = default
font-style-italic = default
font-style-bold-italic = default

font-synthetic-style = bold,italic,bold-italic
font-feature = 
font-size = 13
font-thicken = false

font-variation = 
font-variation-bold = 
font-variation-italic = 
font-variation-bold-italic = 
font-codepoint-map = 
font-thicken-strength = 255

alpha-blending = native
adjust-cell-width = 
adjust-cell-height = 
adjust-font-baseline = 
adjust-underline-position = 
adjust-underline-thickness = 
adjust-strikethrough-position = 
adjust-strikethrough-thickness = 
adjust-overline-position = 
adjust-overline-thickness = 
adjust-cursor-thickness = 
adjust-cursor-height = 
adjust-box-thickness = 

grapheme-width-method = unicode
freetype-load-flags = hinting,force-autohint,monochrome,autohint

theme = "vscode"

background = "#000000"
#background = "#1E1E1E"
foreground = "#D4D4D4"
selection-foreground = "#1E1E2E" 
selection-background = "#264F78" 
selection-invert-fg-bg = false
minimum-contrast = 1

palette = 0=#1d1f21
palette = 1=#cc6666
palette = 2=#b5bd68
palette = 3=#f0c674
palette = 4=#81a2be
palette = 5=#b294bb
palette = 6=#8abeb7
palette = 7=#c5c8c6
palette = 8=#666666
palette = 9=#d54e53
palette = 10=#b9ca4a
palette = 11=#e7c547
palette = 12=#7aa6da
palette = 13=#c397d8
palette = 14=#70c0b1
palette = 15=#eaeaea
palette = 16=#000000
palette = 17=#00005f
palette = 18=#000087
palette = 19=#0000af
palette = 20=#0000d7
palette = 21=#0000ff
palette = 22=#005f00
palette = 23=#005f5f
palette = 24=#005f87
palette = 25=#005faf
palette = 26=#005fd7
palette = 27=#005fff
palette = 28=#008700
palette = 29=#00875f
palette = 30=#008787
palette = 31=#0087af
palette = 32=#0087d7
palette = 33=#0087ff
palette = 34=#00af00
palette = 35=#00af5f
palette = 36=#00af87
palette = 37=#00afaf
palette = 38=#00afd7
palette = 39=#00afff
palette = 40=#00d700
palette = 41=#00d75f
palette = 42=#00d787
palette = 43=#00d7af
palette = 44=#00d7d7
palette = 45=#00d7ff
palette = 46=#00ff00
palette = 47=#00ff5f
palette = 48=#00ff87
palette = 49=#00ffaf
palette = 50=#00ffd7
palette = 51=#00ffff
palette = 52=#5f0000
palette = 53=#5f005f
palette = 54=#5f0087
palette = 55=#5f00af
palette = 56=#5f00d7
palette = 57=#5f00ff
palette = 58=#5f5f00
palette = 59=#5f5f5f
palette = 60=#5f5f87
palette = 61=#5f5faf
palette = 62=#5f5fd7
palette = 63=#5f5fff
palette = 64=#5f8700
palette = 65=#5f875f
palette = 66=#5f8787
palette = 67=#5f87af
palette = 68=#5f87d7
palette = 69=#5f87ff
palette = 70=#5faf00
palette = 71=#5faf5f
palette = 72=#5faf87
palette = 73=#5fafaf
palette = 74=#5fafd7
palette = 75=#5fafff
palette = 76=#5fd700
palette = 77=#5fd75f
palette = 78=#5fd787
palette = 79=#5fd7af
palette = 80=#5fd7d7
palette = 81=#5fd7ff
palette = 82=#5fff00
palette = 83=#5fff5f
palette = 84=#5fff87
palette = 85=#5fffaf
palette = 86=#5fffd7
palette = 87=#5fffff
palette = 88=#870000
palette = 89=#87005f
palette = 90=#870087
palette = 91=#8700af
palette = 92=#8700d7
palette = 93=#8700ff
palette = 94=#875f00
palette = 95=#875f5f
palette = 96=#875f87
palette = 97=#875faf
palette = 98=#875fd7
palette = 99=#875fff
palette = 100=#878700
palette = 101=#87875f
palette = 102=#878787
palette = 103=#8787af
palette = 104=#8787d7
palette = 105=#8787ff
palette = 106=#87af00
palette = 107=#87af5f
palette = 108=#87af87
palette = 109=#87afaf
palette = 110=#87afd7
palette = 111=#87afff
palette = 112=#87d700
palette = 113=#87d75f
palette = 114=#87d787
palette = 115=#87d7af
palette = 116=#87d7d7
palette = 117=#87d7ff
palette = 118=#87ff00
palette = 119=#87ff5f
palette = 120=#87ff87
palette = 121=#87ffaf
palette = 122=#87ffd7
palette = 123=#87ffff
palette = 124=#af0000
palette = 125=#af005f
palette = 126=#af0087
palette = 127=#af00af
palette = 128=#af00d7
palette = 129=#af00ff
palette = 130=#af5f00
palette = 131=#af5f5f
palette = 132=#af5f87
palette = 133=#af5faf
palette = 134=#af5fd7
palette = 135=#af5fff
palette = 136=#af8700
palette = 137=#af875f
palette = 138=#af8787
palette = 139=#af87af
palette = 140=#af87d7
palette = 141=#af87ff
palette = 142=#afaf00
palette = 143=#afaf5f
palette = 144=#afaf87
palette = 145=#afafaf
palette = 146=#afafd7
palette = 147=#afafff
palette = 148=#afd700
palette = 149=#afd75f
palette = 150=#afd787
palette = 151=#afd7af
palette = 152=#afd7d7
palette = 153=#afd7ff
palette = 154=#afff00
palette = 155=#afff5f
palette = 156=#afff87
palette = 157=#afffaf
palette = 158=#afffd7
palette = 159=#afffff
palette = 160=#d70000
palette = 161=#d7005f
palette = 162=#d70087
palette = 163=#d700af
palette = 164=#d700d7
palette = 165=#d700ff
palette = 166=#d75f00
palette = 167=#d75f5f
palette = 168=#d75f87
palette = 169=#d75faf
palette = 170=#d75fd7
palette = 171=#d75fff
palette = 172=#d78700
palette = 173=#d7875f
palette = 174=#d78787
palette = 175=#d787af
palette = 176=#d787d7
palette = 177=#d787ff
palette = 178=#d7af00
palette = 179=#d7af5f
palette = 180=#d7af87
palette = 181=#d7afaf
palette = 182=#d7afd7
palette = 183=#d7afff
palette = 184=#d7d700
palette = 185=#d7d75f
palette = 186=#d7d787
palette = 187=#d7d7af
palette = 188=#d7d7d7
palette = 189=#d7d7ff
palette = 190=#d7ff00
palette = 191=#d7ff5f
palette = 192=#d7ff87
palette = 193=#d7ffaf
palette = 194=#d7ffd7
palette = 195=#d7ffff
palette = 196=#ff0000
palette = 197=#ff005f
palette = 198=#ff0087
palette = 199=#ff00af
palette = 200=#ff00d7
palette = 201=#ff00ff
palette = 202=#ff5f00
palette = 203=#ff5f5f
palette = 204=#ff5f87
palette = 205=#ff5faf
palette = 206=#ff5fd7
palette = 207=#ff5fff
palette = 208=#ff8700
palette = 209=#ff875f
palette = 210=#ff8787
palette = 211=#ff87af
palette = 212=#ff87d7
palette = 213=#ff87ff
palette = 214=#ffaf00
palette = 215=#ffaf5f
palette = 216=#ffaf87
palette = 217=#ffafaf
palette = 218=#ffafd7
palette = 219=#ffafff
palette = 220=#ffd700
palette = 221=#ffd75f
palette = 222=#ffd787
palette = 223=#ffd7af
palette = 224=#ffd7d7
palette = 225=#ffd7ff
palette = 226=#ffff00
palette = 227=#ffff5f
palette = 228=#ffff87
palette = 229=#ffffaf
palette = 230=#ffffd7
palette = 231=#ffffff
palette = 232=#080808
palette = 233=#121212
palette = 234=#1c1c1c
palette = 235=#262626
palette = 236=#303030
palette = 237=#3a3a3a
palette = 238=#444444
palette = 239=#4e4e4e
palette = 240=#585858
palette = 241=#626262
palette = 242=#6c6c6c
palette = 243=#767676
palette = 244=#808080
palette = 245=#8a8a8a
palette = 246=#949494
palette = 247=#9e9e9e
palette = 248=#a8a8a8
palette = 249=#b2b2b2
palette = 250=#bcbcbc
palette = 251=#c6c6c6
palette = 252=#d0d0d0
palette = 253=#dadada
palette = 254=#e4e4e4
palette = 255=#eeeeee

cursor-color = 
cursor-invert-fg-bg = false
cursor-opacity = 1
cursor-style = block
cursor-style-blink = false
cursor-text = 
cursor-click-to-move = true

mouse-hide-while-typing = false
mouse-shift-capture = false
mouse-scroll-multiplier = 1.2

background-opacity = 0.85
background-blur = true

unfocused-split-opacity = 0.7
unfocused-split-fill = 
split-divider-color = "#000000"

working-directory = 
command = 
initial-command =
wait-after-command = false
abnormal-command-exit-runtime = 250
scrollback-limit = 10000

link-url = true
title = 
maximize = true
fullscreen = false
class = 
x11-instance-name = 

keybind = super+page_up=scroll_page_up
keybind = super+ctrl+equal=equalize_splits
keybind = super+physical:four=goto_tab:4
keybind = super+shift+down=jump_to_prompt:1
keybind = super+shift+w=close_window
keybind = super+shift+left_bracket=previous_tab
keybind = super+backspace=text:\x15
keybind = super+alt+w=close_tab
keybind = super+w=close_surface
keybind = super+alt+i=inspector:toggle
keybind = super+physical:eight=goto_tab:8
keybind = super+alt+right=goto_split:right
keybind = shift+up=adjust_selection:up
keybind = super+down=jump_to_prompt:1
keybind = super+enter=toggle_fullscreen
keybind = super+t=new_tab
keybind = super+c=copy_to_clipboard
keybind = super+shift+right_bracket=next_tab
keybind = super+physical:one=goto_tab:1
keybind = shift+left=adjust_selection:left
keybind = super+equal=increase_font_size:1
keybind = shift+page_up=adjust_selection:page_up
keybind = super+physical:three=goto_tab:3
keybind = super+right=text:\x05
keybind = super+d=new_split:right
keybind = super+ctrl+down=resize_split:down,10
keybind = shift+end=adjust_selection:end
keybind = super+plus=increase_font_size:1
keybind = super+q=quit
keybind = super+home=scroll_to_top
keybind = super+ctrl+left=resize_split:left,10
keybind = alt+left=esc:b
keybind = super+ctrl+up=resize_split:up,10
keybind = super+left=text:\x01
keybind = super+shift+up=jump_to_prompt:-1
keybind = shift+right=adjust_selection:right
keybind = super+comma=open_config
keybind = super+shift+comma=reload_config
keybind = super+minus=decrease_font_size:1
keybind = shift+page_down=adjust_selection:page_down
keybind = ctrl+tab=next_tab
keybind = super+a=select_all
keybind = alt+right=esc:f
keybind = super+shift+enter=toggle_split_zoom
keybind = super+alt+down=goto_split:down
keybind = super+ctrl+f=toggle_fullscreen
keybind = super+ctrl+right=resize_split:right,10
keybind = super+alt+shift+j=write_screen_file:open
keybind = shift+down=adjust_selection:down
keybind = ctrl+shift+tab=previous_tab
keybind = super+n=new_window
keybind = super+alt+left=goto_split:left
keybind = super+page_down=scroll_page_down
keybind = super+alt+shift+w=close_all_windows
keybind = super+alt+up=goto_split:up
keybind = super+shift+v=paste_from_selection
keybind = super+left_bracket=goto_split:previous
keybind = super+physical:nine=last_tab
keybind = super+right_bracket=goto_split:next
keybind = super+end=scroll_to_bottom
keybind = super+shift+j=write_screen_file:paste
keybind = super+shift+d=new_split:down
keybind = super+zero=reset_font_size
keybind = super+physical:five=goto_tab:5
keybind = shift+home=adjust_selection:home
keybind = super+physical:seven=goto_tab:7
keybind = super+up=jump_to_prompt:-1
keybind = super+k=clear_screen
keybind = super+physical:two=goto_tab:2
keybind = super+physical:six=goto_tab:6
keybind = super+v=paste_from_clipboard

window-padding-x = 1
window-padding-y = 1
window-padding-balance = true
window-padding-color = background
window-vsync = true

window-inherit-working-directory = true
window-inherit-font-size = true
window-decoration = auto 
window-title-font-family = font-family 
window-subtitle = false

window-theme = auto
# if window-theme == ghostty
window-titlebar-background = "#000000"
window-titlebar-foreground = 

window-colorspace = srgb
window-height = 100
window-width = 200
window-position-x = 
window-position-y = 
window-save-state = default
window-step-resize = false
window-new-tab-position = current

resize-overlay = after-first
resize-overlay-position = center
resize-overlay-duration = 750ms

focus-follows-mouse = true

clipboard-read = allow
clipboard-write = allow
clipboard-trim-trailing-spaces = true
clipboard-paste-protection = true
clipboard-paste-bracketed-safe = true
title-report = false
# 320MB -> max is 4GIB
image-storage-limit = 320000000
copy-on-select = true
click-repeat-interval = 0
config-file = 
config-default-files = true

confirm-close-surface = false
quit-after-last-window-closed = true
quit-after-last-window-closed-delay = 1s
initial-window = true

quick-terminal-position = top
quick-terminal-screen = main

quick-terminal-animation-duration = 0
quick-terminal-autohide = true
quick-terminal-space-behavior = move

# Whether to enable shell integration auto-injection or not. Shell integration
# greatly enhances the terminal experience by enabling a number of features:
# 
#   * Working directory reporting so new tabs, splits inherit the
#     previous terminal's working directory.
# 
#   * Prompt marking that enables the "jump_to_prompt" keybinding.
# 
#   * If you're sitting at a prompt, closing a terminal will not ask
#     for confirmation.
# 
#   * Resizing the window with a complex prompt usually paints much
#     better.
# 
# Allowable values are:
# 
#   * `none` - Do not do any automatic injection. You can still manually
#     configure your shell to enable the integration.
# 
#   * `detect` - Detect the shell based on the filename.
# 
#   * `bash`, `elvish`, `fish`, `zsh` - Use this specific shell injection scheme.
# 
# The default value is `detect`.
shell-integration = none

# Shell integration features to enable. These require our shell integration
# to be loaded, either automatically via shell-integration or manually.
# 
# The format of this is a list of features to enable separated by commas. If
# you prefix a feature with `no-` then it is disabled. If you omit a feature,
# its default value is used, so you must explicitly disable features you don't
# want. You can also use `true` or `false` to turn all features on or off.
# 
# Available features:
# 
#   * `cursor` - Set the cursor to a blinking bar at the prompt.
# 
#   * `sudo` - Set sudo wrapper to preserve terminfo.
# 
#   * `title` - Set the window title via shell integration.
# 
# Example: `cursor`, `no-cursor`, `sudo`, `no-sudo`, `title`, `no-title`
shell-integration-features = cursor,no-sudo,title

# Sets the reporting format for OSC sequences that request color information.
# Ghostty currently supports OSC 10 (foreground), OSC 11 (background), and
# OSC 4 (256 color palette) queries, and by default the reported values
# are scaled-up RGB values, where each component are 16 bits. This is how
# most terminals report these values. However, some legacy applications may
# require 8-bit, unscaled, components. We also support turning off reporting
# altogether. The components are lowercase hex values.
# 
# Allowable values are:
# 
#   * `none` - OSC 4/10/11 queries receive no reply
# 
#   * `8-bit` - Color components are return unscaled, e.g. `rr/gg/bb`
# 
#   * `16-bit` - Color components are returned scaled, e.g. `rrrr/gggg/bbbb`
# 
# The default value is `16-bit`.
osc-color-report-format = 16-bit

# If true, allows the "KAM" mode (ANSI mode 2) to be used within
# the terminal. KAM disables keyboard input at the request of the
# application. This is not a common feature and is not recommended
# to be enabled. This will not be documented further because
# if you know you need KAM, you know. If you don't know if you
# need KAM, you don't need it.
vt-kam-allowed = false

# Custom shaders to run after the default shaders. This is a file path
# to a GLSL-syntax shader for all platforms.
# 
# Warning: Invalid shaders can cause Ghostty to become unusable such as by
# causing the window to be completely black. If this happens, you can
# unset this configuration to disable the shader.
# 
# On Linux, this requires OpenGL 4.2. Ghostty typically only requires
# OpenGL 3.3, but custom shaders push that requirement up to 4.2.
# 
# The shader API is identical to the Shadertoy API: you specify a `mainImage`
# function and the available uniforms match Shadertoy. The iChannel0 uniform
# is a texture containing the rendered terminal screen.
# 
# If the shader fails to compile, the shader will be ignored. Any errors
# related to shader compilation will not show up as configuration errors
# and only show up in the log, since shader compilation happens after
# configuration loading on the dedicated render thread.  For interactive
# development, use [shadertoy.com](https://shadertoy.com).
# 
# This can be repeated multiple times to load multiple shaders. The shaders
# will be run in the order they are specified.
# 
# Changing this value at runtime and reloading the configuration will only
# affect new windows, tabs, and splits.
custom-shader = 

# If `true` (default), the focused terminal surface will run an animation
# loop when custom shaders are used. This uses slightly more CPU (generally
# less than 10%) but allows the shader to animate. This only runs if there
# are custom shaders and the terminal is focused.
# 
# If this is set to `false`, the terminal and custom shader will only render
# when the terminal is updated. This is more efficient but the shader will
# not animate.
# 
# This can also be set to `always`, which will always run the animation
# loop regardless of whether the terminal is focused or not. The animation
# loop will still only run when custom shaders are used. Note that this
# will use more CPU per terminal surface and can become quite expensive
# depending on the shader and your terminal usage.
# 
# This value can be changed at runtime and will affect all currently
# open terminals.
custom-shader-animation = true

# Control the in-app notifications that Ghostty shows.
# 
# On Linux (GTK) with Adwaita, in-app notifications show up as toasts. Toasts
# appear overlaid on top of the terminal window. They are used to show
# information that is not critical but may be important.
# 
# Possible notifications are:
# 
#   - `clipboard-copy` (default: true) - Show a notification when text is copied
#     to the clipboard.
# 
# To specify a notification to enable, specify the name of the notification.
# To specify a notification to disable, prefix the name with `no-`. For
# example, to disable `clipboard-copy`, set this configuration to
# `no-clipboard-copy`. To enable it, set this configuration to `clipboard-copy`.
# 
# Multiple notifications can be enabled or disabled by separating them
# with a comma.
# 
# A value of "false" will disable all notifications. A value of "true" will
# enable all notifications.
# 
# This configuration only applies to GTK with Adwaita enabled.
app-notifications = clipboard-copy

# If anything other than false, fullscreen mode on macOS will not use the
# native fullscreen, but make the window fullscreen without animations and
# using a new space. It's faster than the native fullscreen mode since it
# doesn't use animations.
# 
# Important: tabs DO NOT WORK in this mode. Non-native fullscreen removes
# the titlebar and macOS native tabs require the titlebar. If you use tabs,
# you should not use this mode.
# 
# If you fullscreen a window with tabs, the currently focused tab will
# become fullscreen while the others will remain in a separate window in
# the background. You can switch to that window using normal window-switching
# keybindings such as command+tilde. When you exit fullscreen, the window
# will return to the tabbed state it was in before.
# 
# Allowable values are:
# 
#   * `visible-menu` - Use non-native macOS fullscreen, keep the menu bar visible
#   * `true` - Use non-native macOS fullscreen, hide the menu bar
#   * `false` - Use native macOS fullscreen
# 
# Changing this option at runtime works, but will only apply to the next
# time the window is made fullscreen. If a window is already fullscreen,
# it will retain the previous setting until fullscreen is exited.
macos-non-native-fullscreen = false

# The style of the macOS titlebar. Available values are: "native",
# "transparent", "tabs", and "hidden".
# 
# The "native" style uses the native macOS titlebar with zero customization.
# The titlebar will match your window theme (see `window-theme`).
# 
# The "transparent" style is the same as "native" but the titlebar will
# be transparent and allow your window background color to come through.
# This makes a more seamless window appearance but looks a little less
# typical for a macOS application and may not work well with all themes.
# 
# The "transparent" style will also update in real-time to dynamic
# changes to the window background color, e.g. via OSC 11. To make this
# more aesthetically pleasing, this only happens if the terminal is
# a window, tab, or split that borders the top of the window. This
# avoids a disjointed appearance where the titlebar color changes
# but all the topmost terminals don't match.
# 
# The "tabs" style is a completely custom titlebar that integrates the
# tab bar into the titlebar. This titlebar always matches the background
# color of the terminal. There are some limitations to this style:
# On macOS 13 and below, saved window state will not restore tabs correctly.
# macOS 14 does not have this issue and any other macOS version has not
# been tested.
# 
# The "hidden" style hides the titlebar. Unlike `window-decoration = false`,
# however, it does not remove the frame from the window or cause it to have
# squared corners. Changing to or from this option at run-time may affect
# existing windows in buggy ways.
# 
# When "hidden", the top titlebar area can no longer be used for dragging
# the window. To drag the window, you can use option+click on the resizable
# areas of the frame to drag the window. This is a standard macOS behavior
# and not something Ghostty enables.
# 
# The default value is "transparent". This is an opinionated choice
# but its one I think is the most aesthetically pleasing and works in
# most cases.
# 
# Changing this option at runtime only applies to new windows.
macos-titlebar-style = transparent

# Whether the proxy icon in the macOS titlebar is visible. The proxy icon
# is the icon that represents the folder of the current working directory.
# You can see this very clearly in the macOS built-in Terminal.app
# titlebar.
# 
# The proxy icon is only visible with the native macOS titlebar style.
# 
# Valid values are:
# 
#   * `visible` - Show the proxy icon.
#   * `hidden` - Hide the proxy icon.
# 
# The default value is `visible`.
# 
# This setting can be changed at runtime and will affect all currently
# open windows but only after their working directory changes again.
# Therefore, to make this work after changing the setting, you must
# usually `cd` to a different directory, open a different file in an
# editor, etc.
macos-titlebar-proxy-icon = visible

# macOS doesn't have a distinct "alt" key and instead has the "option"
# key which behaves slightly differently. On macOS by default, the
# option key plus a character will sometimes produces a Unicode character.
# For example, on US standard layouts option-b produces "∫". This may be
# undesirable if you want to use "option" as an "alt" key for keybindings
# in terminal programs or shells.
# 
# This configuration lets you change the behavior so that option is treated
# as alt.
# 
# The default behavior (unset) will depend on your active keyboard
# layout. If your keyboard layout is one of the keyboard layouts listed
# below, then the default value is "true". Otherwise, the default
# value is "false". Keyboard layouts with a default value of "true" are:
# 
#   - U.S. Standard
#   - U.S. International
# 
# Note that if an *Option*-sequence doesn't produce a printable character, it
# will be treated as *Alt* regardless of this setting. (e.g. `alt+ctrl+a`).
# 
# Explicit values that can be set:
# 
# If `true`, the *Option* key will be treated as *Alt*. This makes terminal
# sequences expecting *Alt* to work properly, but will break Unicode input
# sequences on macOS if you use them via the *Alt* key.
# 
# You may set this to `false` to restore the macOS *Alt* key unicode
# sequences but this will break terminal sequences expecting *Alt* to work.
# 
# The values `left` or `right` enable this for the left or right *Option*
# key, respectively.
# 
# This does not work with GLFW builds.
macos-option-as-alt = 

# Whether to enable the macOS window shadow. The default value is true.
# With some window managers and window transparency settings, you may
# find false more visually appealing.
macos-window-shadow = true

# If true, Ghostty on macOS will automatically enable the "Secure Input"
# feature when it detects that a password prompt is being displayed.
# 
# "Secure Input" is a macOS security feature that prevents applications from
# reading keyboard events. This can always be enabled manually using the
# `Ghostty > Secure Keyboard Entry` menu item.
# 
# Note that automatic password prompt detection is based on heuristics
# and may not always work as expected. Specifically, it does not work
# over SSH connections, but there may be other cases where it also
# doesn't work.
# 
# A reason to disable this feature is if you find that it is interfering
# with legitimate accessibility software (or software that uses the
# accessibility APIs), since secure input prevents any application from
# reading keyboard events.
macos-auto-secure-input = true

# If true, Ghostty will show a graphical indication when secure input is
# enabled. This indication is generally recommended to know when secure input
# is enabled.
# 
# Normally, secure input is only active when a password prompt is displayed
# or it is manually (and typically temporarily) enabled. However, if you
# always have secure input enabled, the indication can be distracting and
# you may want to disable it.
macos-secure-input-indication = true

# Customize the macOS app icon.
# 
# This only affects the icon that appears in the dock, application
# switcher, etc. This does not affect the icon in Finder because
# that is controlled by a hardcoded value in the signed application
# bundle and can't be changed at runtime. For more details on what
# exactly is affected, see the `NSApplication.icon` Apple documentation;
# that is the API that is being used to set the icon.
# 
# Valid values:
# 
#  * `official` - Use the official Ghostty icon.
#  * `blueprint`, `chalkboard`, `microchip`, `glass`, `holographic`,
#    `paper`, `retro`, `xray` - Official variants of the Ghostty icon
#    hand-created by artists (no AI).
#  * `custom-style` - Use the official Ghostty icon but with custom
#    styles applied to various layers. The custom styles must be
#    specified using the additional `macos-icon`-prefixed configurations.
#    The `macos-icon-ghost-color` and `macos-icon-screen-color`
#    configurations are required for this style.
# 
# WARNING: The `custom-style` option is _experimental_. We may change
# the format of the custom styles in the future. We're still finalizing
# the exact layers and customization options that will be available.
# 
# Other caveats:
# 
#   * The icon in the update dialog will always be the official icon.
#     This is because the update dialog is managed through a
#     separate framework and cannot be customized without significant
#     effort.
# 
macos-icon = official

# The material to use for the frame of the macOS app icon.
# 
# Valid values:
# 
#  * `aluminum` - A brushed aluminum frame. This is the default.
#  * `beige` - A classic 90's computer beige frame.
#  * `plastic` - A glossy, dark plastic frame.
#  * `chrome` - A shiny chrome frame.
# 
# This only has an effect when `macos-icon` is set to `custom-style`.
macos-icon-frame = aluminum

# The color of the ghost in the macOS app icon.
# 
# Note: This configuration is required when `macos-icon` is set to
# `custom-style`.
# 
# This only has an effect when `macos-icon` is set to `custom-style`.
# 
# Specified as either hex (`#RRGGBB` or `RRGGBB`) or a named X11 color.
macos-icon-ghost-color = 

# The color of the screen in the macOS app icon.
# 
# The screen is a gradient so you can specify multiple colors that
# make up the gradient. Comma-separated colors may be specified as
# as either hex (`#RRGGBB` or `RRGGBB`) or as named X11 colors.
# 
# Note: This configuration is required when `macos-icon` is set to
# `custom-style`.
# 
# This only has an effect when `macos-icon` is set to `custom-style`.
macos-icon-screen-color = 

# Put every surface (tab, split, window) into a dedicated Linux cgroup.
# 
# This makes it so that resource management can be done on a per-surface
# granularity. For example, if a shell program is using too much memory,
# only that shell will be killed by the oom monitor instead of the entire
# Ghostty process. Similarly, if a shell program is using too much CPU,
# only that surface will be CPU-throttled.
# 
# This will cause startup times to be slower (a hundred milliseconds or so),
# so the default value is "single-instance." In single-instance mode, only
# one instance of Ghostty is running (see gtk-single-instance) so the startup
# time is a one-time cost. Additionally, single instance Ghostty is much
# more likely to have many windows, tabs, etc. so cgroup isolation is a
# big benefit.
# 
# This feature requires systemd. If systemd is unavailable, cgroup
# initialization will fail. By default, this will not prevent Ghostty
# from working (see linux-cgroup-hard-fail).
# 
# Valid values are:
# 
#   * `never` - Never use cgroups.
#   * `always` - Always use cgroups.
#   * `single-instance` - Enable cgroups only for Ghostty instances launched
#     as single-instance applications (see gtk-single-instance).
# 
linux-cgroup = single-instance

# Memory limit for any individual terminal process (tab, split, window,
# etc.) in bytes. If this is unset then no memory limit will be set.
# 
# Note that this sets the "memory.high" configuration for the memory
# controller, which is a soft limit. You should configure something like
# systemd-oom to handle killing processes that have too much memory
# pressure.
linux-cgroup-memory-limit = 

# Number of processes limit for any individual terminal process (tab, split,
# window, etc.). If this is unset then no limit will be set.
# 
# Note that this sets the "pids.max" configuration for the process number
# controller, which is a hard limit.
linux-cgroup-processes-limit = 

# If this is false, then any cgroup initialization (for linux-cgroup)
# will be allowed to fail and the failure is ignored. This is useful if
# you view cgroup isolation as a "nice to have" and not a critical resource
# management feature, because Ghostty startup will not fail if cgroup APIs
# fail.
# 
# If this is true, then any cgroup initialization failure will cause
# Ghostty to exit or new surfaces to not be created.
# 
# Note: This currently only affects cgroup initialization. Subprocesses
# must always be able to move themselves into an isolated cgroup.
linux-cgroup-hard-fail = false

# Enable or disable GTK's OpenGL debugging logs. The default is `true` for
# debug builds, `false` for all others.
gtk-opengl-debug = false

# Obsolete configuration that should not be set. This was deprecated in
# Ghostty 1.1.3 and no longer has any effect. The configuration key will
# be fully removed in 1.2.0. You can manually override the GSK renderer
# using standard environment variables such as `GSK_RENDERER` (from GTK).
gtk-gsk-renderer = default

# If `true`, the Ghostty GTK application will run in single-instance mode:
# each new `ghostty` process launched will result in a new window if there is
# already a running process.
# 
# If `false`, each new ghostty process will launch a separate application.
# 
# The default value is `desktop` which will default to `true` if Ghostty
# detects that it was launched from the `.desktop` file such as an app
# launcher (like Gnome Shell)  or by D-Bus activation. If Ghostty is launched
# from the command line, it will default to `false`.
# 
# Note that debug builds of Ghostty have a separate single-instance ID
# so you can test single instance without conflicting with release builds.
gtk-single-instance = desktop

# When enabled, the full GTK titlebar is displayed instead of your window
# manager's simple titlebar. The behavior of this option will vary with your
# window manager.
# 
# This option does nothing when `window-decoration` is false or when running
# under macOS.
# 
# Changing this value at runtime and reloading the configuration will only
# affect new windows.
gtk-titlebar = true

# Determines the side of the screen that the GTK tab bar will stick to.
# Top, bottom, left, right, and hidden are supported. The default is top.
# 
# If this option has value `left` or `right` when using Adwaita, it falls
# back to `top`. `hidden`, meaning that tabs don't exist, is not supported
# without using Adwaita, falling back to `top`.
# 
# When `hidden` is set and Adwaita is enabled, a tab button displaying the
# number of tabs will appear in the title bar. It has the ability to open a
# tab overview for displaying tabs. Alternatively, you can use the
# `toggle_tab_overview` action in a keybind if your window doesn't have a
# title bar, or you can switch tabs with keybinds.
gtk-tabs-location = top

# If this is `true`, the titlebar will be hidden when the window is maximized,
# and shown when the titlebar is unmaximized. GTK only.
gtk-titlebar-hide-when-maximized = false

# Determines the appearance of the top and bottom bars when using the
# Adwaita tab bar. This requires `gtk-adwaita` to be enabled (it is
# by default).
# 
# Valid values are:
# 
#  * `flat` - Top and bottom bars are flat with the terminal window.
#  * `raised` - Top and bottom bars cast a shadow on the terminal area.
#  * `raised-border` - Similar to `raised` but the shadow is replaced with a
#    more subtle border.
# 
# Changing this value at runtime will only affect new windows.
adw-toolbar-style = raised

# If `true` (default), then the Ghostty GTK tabs will be "wide." Wide tabs
# are the new typical Gnome style where tabs fill their available space.
# If you set this to `false` then tabs will only take up space they need,
# which is the old style.
gtk-wide-tabs = true

# If `true` (default), Ghostty will enable Adwaita theme support. This
# will make `window-theme` work properly and will also allow Ghostty to
# properly respond to system theme changes, light/dark mode changing, etc.
# This requires a GTK4 desktop with a GTK4 theme.
# 
# If you are running GTK3 or have a GTK3 theme, you may have to set this
# to false to get your theme picked up properly. Having this set to true
# with GTK3 should not cause any problems, but it may not work exactly as
# expected.
# 
# This configuration only has an effect if Ghostty was built with
# Adwaita support.
gtk-adwaita = true

# Custom CSS files to be loaded.
# 
# This configuration can be repeated multiple times to load multiple files.
# Prepend a ? character to the file path to suppress errors if the file does
# not exist. If you want to include a file that begins with a literal ?
# character, surround the file path in double quotes (").
# The file size limit for a single stylesheet is 5MiB.
gtk-custom-css = 

# If `true` (default), applications running in the terminal can show desktop
# notifications using certain escape sequences such as OSC 9 or OSC 777.
desktop-notifications = true

# If `true`, the bold text will use the bright color palette.
bold-is-bright = false

# This will be used to set the `TERM` environment variable.
# HACK: We set this with an `xterm` prefix because vim uses that to enable key
# protocols (specifically this will enable `modifyOtherKeys`), among other
# features. An option exists in vim to modify this: `:set
# keyprotocol=ghostty:kitty`, however a bug in the implementation prevents it
# from working properly. https://github.com/vim/vim/pull/13211 fixes this.
term = xterm-ghostty

# String to send when we receive `ENQ` (`0x05`) from the command that we are
# running. Defaults to an empty string if not set.
enquiry-response = 

# Control the auto-update functionality of Ghostty. This is only supported
# on macOS currently, since Linux builds are distributed via package
# managers that are not centrally controlled by Ghostty.
# 
# Checking or downloading an update does not send any information to
# the project beyond standard network information mandated by the
# underlying protocols. To put it another way: Ghostty doesn't explicitly
# add any tracking to the update process. The update process works by
# downloading information about the latest version and comparing it
# client-side to the current version.
# 
# Valid values are:
# 
#  * `off` - Disable auto-updates.
#  * `check` - Check for updates and notify the user if an update is
#    available, but do not automatically download or install the update.
#  * `download` - Check for updates, automatically download the update,
#    notify the user, but do not automatically install the update.
# 
# If unset, we defer to Sparkle's default behavior, which respects the
# preference stored in the standard user defaults (`defaults(1)`).
# 
# Changing this value at runtime works after a small delay.
auto-update = 

# The release channel to use for auto-updates.
# 
# The default value of this matches the release channel of the currently
# running Ghostty version. If you download a pre-release version of Ghostty
# then this will be set to `tip` and you will receive pre-release updates.
# If you download a stable version of Ghostty then this will be set to
# `stable` and you will receive stable updates.
# 
# Valid values are:
# 
#  * `stable` - Stable, tagged releases such as "1.0.0".
#  * `tip` - Pre-release versions generated from each commit to the
#    main branch. This is the version that was in use during private
#    beta testing by thousands of people. It is generally stable but
#    will likely have more bugs than the stable channel.
# 
# Changing this configuration requires a full restart of
# Ghostty to take effect.
# 
# This only works on macOS since only macOS has an auto-update feature.
auto-update-channel = 

